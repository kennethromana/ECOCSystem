@using ECOCSystem.Model
@model CompanyModel
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes = false;
}

<style>
    .modal {
        overflow: auto !important;
    }

    .card .overlay, .info-box .overlay, .overlay-wrapper .overlay, .small-box .overlay {
        background-color: rgb(52 58 64 / 59%);

    }
</style>
<section class="content">
    <div class="card card-success card-outline">
        <div class="card-header">
            <h3 class="card-title">Company List</h3>
        </div>
        <div class="fab" id="addCompany" type="button" data-toggle="modal" data-target="#modal-companyInfo" name="btnSubmit" title="" @*onclick="location.href='/Customer/Customer'"*@ data-original-title="Create New"> + </div>
        <div class="card-body">
            @using (Html.BeginForm("CompanyForm", "Company", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "CompanyInfo_Form" }))
            {

                @Html.HiddenFor(m => m.SelectedCompanyID)
                <div id="" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="table-CompanyList" class="table table-head-fixed table-hover dataTable dtr-inline " style="cursor:pointer" aria-describedby="" t>
                                <thead>
                                    <tr>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending"><center>Action Edit</center></th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Company Name</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Address</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Email</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Business Phone</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Mobile Phone</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Fax No.</th>
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">TIN</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @for (int i = 0; i < Model.CompanyListView.Count(); i++)
                                    {
                                        <tr>
                                            <td style="width: 14.28%;">
                                                <center>
                                                    <div class="">
                                                        <span type="button" data-toggle="modal" data-target="#modal-companyInfo" class="editCompany" CompanyID="@Model.CompanyListView[i].ID">
                                                            <i class="fa fa-pencil-alt fa-lg text-primary" style="padding: 0px"></i>
                                                        </span>
                                                    </div>
                                                </center>
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].Name)
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].Address)
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].EmailAddress)
                                            </td>

                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].BusinessPhone)
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].MobilePhone)
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].FaxNumber)
                                            </td>
                                            <td style="width: 14.28%;">
                                                @Html.DisplayFor(o => Model.CompanyListView[i].TIN)
                                            </td>

                                        </tr>
                                    }

                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="modal-companyInfo" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-xl">

                        @{
                            Html.RenderPartial("_CompanyInfo", Model.CompanyInfo, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "CompanyInfo" } });
                        }
                    </div>

                </div>

                <div class="modal fade" id="modal-company-branch" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        @{
                            Html.RenderPartial("_Branch", Model.CompanyBranch, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "CompanyBranch" } });
                        }
                    </div>

                </div>
            }

        </div>
    </div>




  
</section>
<script>


    $(document).ready(function () {


        //if the modal is close then remove the overlay effect
        $('#modal-company-branch').on('hide.bs.modal', function (e) {
            // do something…
            $("#modal-companyInfo .overlay").addClass("d-none");

        });


        $('#addCompany').on('click', function () {
            $('#companyOption').empty();
            $('#companyOption').append(`<button type="button" id="submit_addCompany" value="ADDCOMPANY" class="btn btn-success">Save</button> `)

            $('#submit_addCompany').on('click', function () {
                submitForm("ADDCOMPANY");
            });



        });
        $('.editCompany').on('click', function () {
            $('#companyOption').empty();
            $('#companyOption').append(`<button type="button"  id = "submit_editCompany" value="EDITCOMPANY" class="btn btn-success">Update</button> `)



            $('#submit_editCompany').on('click', function () {
                submitForm("EDITCOMPANY");
            });

            let CompanyID = $(this).attr('CompanyID');


            getBatchList(CompanyID)
            getCompanyInfo(CompanyID)
            getUserList(CompanyID)


        });

    });

    var addAntiForgeryToken = function (data) {
        data.__RequestVerificationToken = $("[name='__RequestVerificationToken']").val();
        return data;
    };

    function submitForm(submitType) {
        var form = jQuery("#CompanyInfo_Form");
        if (form.valid()) {
            var formData = new FormData(form[0]);
            formData.append("submitType", submitType);
            $.ajax({
                url: '@Url.Action("CompanyForm", "Company")',
                type: "POST",
                dataType: "JSON",
                contentType: false,
                processData: false,
                async: true,
                data: addAntiForgeryToken(formData),
                beforeSend: function () {
                    toastr.clear();

                },
                success: function (response) {
                    switch (response.Status) {
                        case "Success":

                            switch (response.currentForm) {
                                case "Company":
                                    location.reload();
                                    break;
                                case "Branch":
                                    $('#modal-company-branch').modal('hide')
                                    getBatchList(response.CompanyID)
                                    break;
                                default:
                                    toastr.success(response.Message);
                                    break;
                            }

                            toastr.success(response.Message);
                            break;
                        case "Warning":
                            toastr.warning(response.Message);
                            break;
                        case "Error":
                            toastr.error(response.Message);
                            break;
                        case "Info":
                            toastr.info(response.Message);
                            break;
                        default:
                            toastr.error(response.Message);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('An error has occured while processing, Please contact Databridge Support.');
                },
                complete: function () {

                    $('#loadingScreen').hide();
                },
            });
        }
    }


    function closeModalBranch() {
        $('#modal-company-branch').modal('hide')
        $("#modal-companyInfo .overlay").addClass("d-none");
    }


    function getCompanyInfo(CompanyID)
    {
            $.ajax({
                url: '@Url.Action("GetCompanyInfo", "Company")',
                type: "GET",
                cache: false,
                dataType: "JSON",
                beforeSend: function () {
                    $('#loadingScreen').show();
                },
               /* async: false,*/
                data: { "CompanyID": CompanyID },
                success: function (response) {

                    $('#SelectedCompanyID').val(response.ID)
                    $('#CompanyInfo_Name').val(response.Name)
                    $('#CompanyInfo_Address').val(response.Address)
                    $('#CompanyInfo_EmailAddress').val(response.EmailAddress)
                    $('#CompanyInfo_BusinessPhone').val(response.BusinessPhone)
                    $('#CompanyInfo_MobilePhone').val(response.MobilePhone)
                    $('#CompanyInfo_FaxNumber').val(response.FaxNumber)
                    $('#CompanyInfo_TIN').val(response.TIN)
                },
                error: function (xhr, status, error) {
                    toastr.error('An error has occured while processing, Please contact Databridge Support.');
                },
                complete: function () {
                    $('#loadingScreen').hide();
                },
            });


    };
    function getBatchList(CompanyID) {
    /*    all_table.clear();*/
        let cntRow = 0;
         batchList_table  = $("#tbl_Batches").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "scrollX": true,
            "scrollY": true,
            "destroy": true,

            "order": [],
            "dom":
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
            "ajax": {
                "url": '@Url.Action("GetCompanyBatchList", "Company")',
                "type": "POST",
                "datatype": "json",
                "data": function (o) {
                    o.CompanyID = CompanyID;
                },
                "beforeSend": function () {
                    $('#loadingScreen').show();
                    cntRow = 0;
                },
                "complete": function (row, data, dataIndex) {
                    $('#loadingScreen').hide();
                }
            },
            "createdRow": function (row, data, dataIndex) {

            },
            "columns": [
                {
                    "className": "ID", "data": null, "name": "ID",
                    render: function (data, type, row) {
                        return `<center>
                                     <div class="">
                                         <span type="button" data-toggle="modal" data-target="#modal-companyInfo" class="editCompany" BranchID="`+ data.ID +`">
                                            <i class="fa fa-pencil-alt fa-lg text-primary" style="padding: 0px"></i>
                                        </span>
                                    </div>
                              </center>`
                    }, "autoWidth": true
                },
                { "className": "Name", "data": "Name", "name": "Name", "autoWidth": true },
                { "className": "Address", "data": "Address", "name": "Address", "autoWidth": true },
                { "className": "AccreditationNumber", "data": "AccreditationNumber", "name": "AccreditationNumber", "autoWidth": true },
                { "className": "EmailAddress", "data": "EmailAddress", "name": "EmailAddress", "autoWidth": true },
                { "className": "BusinessPhone", "data": "BusinessPhone", "name": "BusinessPhone", "autoWidth": true },
                { "className": "MobilePhone", "data": "MobilePhone", "name": "MobilePhone", "autoWidth": true },
                { "className": "FaxNumber", "data": "FaxNumber", "name": "FaxNumber", "autoWidth": true },
                { "className": "TIN", "data": "TIN", "name": "TIN", "autoWidth": true },

            ]
        });
           $('#tbl_Batches_paginate').parent('div').parent('div').css('flex-direction', 'row-reverse').css('margin', '12px');

        //$(document).on("change", "input[name='checkAddress']", function () {
        //    $('input.chk').not(this).prop('checked', false);

        //    let AddressID = $(this).attr('AddressID');
        //    $('#AddressID').val(AddressID);

        //});
    };

    function getUserList(CompanyID) {

        let cntRow = 0;
        batchList_table = $("#tbl_Users").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "scrollX": true,
            "scrollY": true,
            "destroy": true,

            "order": [],
            "dom":
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
            "ajax": {
                "url": '@Url.Action("GetCompanyUserList", "Company")',
                "type": "POST",
                "datatype": "json",
                "data": function (o) {
                    o.CompanyID = CompanyID;
                },
                "beforeSend": function () {
                    $('#loadingScreen').show();
                    cntRow = 0;
                },
                "complete": function (row, data, dataIndex) {
                    $('#loadingScreen').hide();
                }
            },
            "createdRow": function (row, data, dataIndex) {

            },
            "columns": [
                {
                    "className": "ID", "data": null, "name": "ID",
                    render: function (data, type, row) {
                        return `<center>
                                  <div class="icheck-success d-inline">
                                    <input class="chk" name="checkAddress" type="checkbox" AddressID="`+ data.ID + `" id="address` + data.ID +`">
                                        <label for="address`+ data.ID+`">
                                    </label>
                                 </div>
                              </center>`
                    }, "autoWidth": true
                },
                { "className": "UserType", "data": "UserType", "name": "UserType", "autoWidth": true },
                { "className": "Fname", "data": "Fname", "name": "Fname", "autoWidth": true },
                { "className": "Lname", "data": "Lname", "name": "Lname", "autoWidth": true },
                { "className": "Mname", "data": "Mname", "name": "Mname", "autoWidth": true },
                { "className": "Email", "data": "Email", "name": "Email", "autoWidth": true },

            ]
        });
           $('#tbl_Users_paginate').parent('div').parent('div').css('flex-direction', 'row-reverse').css('margin', '12px');

        //$(document).on("change", "input[name='checkAddress']", function () {
        //    $('input.chk').not(this).prop('checked', false);

        //    let AddressID = $(this).attr('AddressID');
        //    $('#AddressID').val(AddressID);

        //});
    };





</script>
