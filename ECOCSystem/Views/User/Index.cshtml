@using ECOCSystem.Model
@using ECOCSystem.Tools
@model UserModel
@{
    ViewBag.Title = "UserList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="card card-success card-outline">


        <div class="card-header">
            <h3 class="card-title">User List</h3>
        </div>
        <div class="fab" type="button" data-toggle="modal" data-target="#modal-user" name="btnSubmit" title="" @*onclick="location.href='/Customer/Customer'"*@ data-original-title="Create New"> + </div>
        <div class="card-body">
            <div id="example2_wrapper" class="dataTables_wrapper dt-bootstrap4">
                <div class="row">
                    <div class="col-sm-12">
                        <table id="example2" class="table table-head-fixed table-hover dataTable dtr-inline " style="cursor:pointer" aria-describedby="example2_info" t>
                            <thead>
                                <tr>
                                   
                                    <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Action Edit</th>
                                    <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">First name</th>
                                    <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Last  name</th>
                                    <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Email</th>
                                    <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">User Type</th>
                                    @if (CurrentUser.Details.CompanyEntityID == (int)CompanyEntityEnum.Insurance)
                                    {
                                        <th class="sorting" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">Branch</th>
                                    }

                                </tr>
                            </thead>
                            <tbody>
                                @*<tr class="odd">
                                        <td class="sorting_1 dtr-control">Gecko</td>
                                        <td>Mozilla 1.5</td>
                                        <td class="">Win 95+ / OSX.1+</td>
                                        <td>1.5</td>
                                        <td>A</td>
                                    </tr>*@
                               @for (int i = 0; i < Model.UserList.Count(); i++)
                                {
                                <tr>
                                    <td style="width: 14.28%;">
                                        <center>
                                            <div class="">
                                                <span type="button" data-toggle="modal" data-target="#modal-user" class="editUser" UserID="@Model.UserList[i].UserID">
                                                    <i class="fa fa-pencil-alt fa-lg text-primary" style="padding: 0px"></i>
                                                </span>
                                            </div>
                                        </center>
                                    </td>
                                    <td style="width: 14.28%;">
                                        @Html.DisplayFor(o => Model.UserList[i].FirstName)
                                    </td>
                                    <td style="width: 14.28%;">
                                        @Html.DisplayFor(o => Model.UserList[i].LastName)
                                    </td>
                                    <td style="width: 14.28%;">
                                        @Html.DisplayFor(o => Model.UserList[i].Email)
                                    </td>

                                    <td style="width: 14.28%;">
                                        @Html.DisplayFor(o => Model.UserList[i].UserType)
                                    </td>
                                    @if (CurrentUser.Details.CompanyEntityID == (int)CompanyEntityEnum.Insurance)
                                    {
                                        <td style="width: 14.28%;">
                                            @Html.DisplayFor(o => Model.UserList[i].CompanyBranch)
                                        </td>
                                    }


                                </tr>
                                }

                            </tbody>
                            @*<tfoot>
                                    <tr>
                                        <th rowspan="1" colspan="1">First name</th>
                                        <th rowspan="1" colspan="1">Last name</th>
                                        <th rowspan="1" colspan="1">Email</th>
                                    </tr>
                                </tfoot>*@
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
 


    <div class="modal fade" id="modal-user" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">User Information</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
               @using (Html.BeginForm("User", "User", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "MV_Form" }))
               {

            <div class="modal-body @*overlay*@">
                <section class="row mt-4 pb-4">
                    @*<i class="fas fa-2x fa-sync fa-spin"></i>*@
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(o => o.FirstName)
                        <div class="input-group">@Html.TextBoxFor(o => o.FirstName, new { @class = "form-control input-style", placeholder = "First Name" })</div>
                        @Html.ValidationMessageFor(o => o.FirstName)
                    </div>
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(o => o.LastName)
                        <div class="input-group">@Html.TextBoxFor(o => o.LastName, new { @class = "form-control input-style", placeholder = "Last name" })</div>
                        @Html.ValidationMessageFor(o => o.LastName)
                    </div>
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(o => o.MiddleName)
                        <div class="input-group">@Html.TextBoxFor(o => o.MiddleName, new { @class = "form-control input-style", placeholder = "Middle Name" })</div>
                        @Html.ValidationMessageFor(o => o.MiddleName)
                    </div>
                </section>
                <section class="row pb-4">
                    @*<i class="fas fa-2x fa-sync fa-spin"></i>*@
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(o => o.Email)
                        <div class="input-group">@Html.TextBoxFor(o => o.Email, new { @class = "form-control input-style", placeholder = "Email Address" })</div>
                        @Html.ValidationMessageFor(o => o.Email)
                    </div>
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(o => o.Password)
                        <div class="input-group">@Html.TextBoxFor(o => o.Password, new { @class = "form-control input-style Password", type = "Password", placeholder = "Password" })</div>
                        @Html.ValidationMessageFor(o => o.Password)
                    </div>

                </section>
                        @if (CurrentUser.Details.CompanyEntityID == Convert.ToInt32(CompanyEntityEnum.Insurance))
                        {
                            <section class="row pb-4">
                   
         
                                <div class="form-group col-lg-4 col-sm-4">
                                    @Html.LabelFor(m => m.SelectedUserTypeID)
                                    <div class="input-group">
                                        @Html.DropDownListFor(m => m.SelectedUserTypeID, new SelectList(Model.UserTypes, "ID", "Info"), " Select User Type  ", new { @class = "form-control select2 select2Ajax", select2Ajax_url = Url.Action("GetUserTypes", "GetData") })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.SelectedUserTypeID, "", new { @class = "" })
                                </div>

                                <div class="form-group col-lg-4 col-sm-4">
                                    @Html.LabelFor(m => m.SelectedCompanyBranchID)
                                    <div class="input-group">
                                         @Html.DropDownListFor(m => m.SelectedCompanyBranchID, new SelectList(Model.CompanyBranchList, "ID", "Info"), " Select Branch  ", new { @class = "form-control select2 select2Ajax", select2Ajax_url = Url.Action("GetCompanyBranchList", "GetData") })
                                    </div>
                                   @Html.ValidationMessageFor(m => m.SelectedCompanyBranchID, "", new { @class = "" })
                                </div>



                            </section>
                         }



            </div>
                <div class="modal-footer justify-content-between submit-btn">
                    <button type="button" class="btn btn-outline-success" data-dismiss="modal">Cancel</button>
                    <button type="submit" name="submit" value="ADDUSER" class="btn btn-success">Save </button>
                </div>
               }
            </div>

        </div>

    </div>
</section>

<script>
    $(document).ready(function () {

        $(".table").DataTable();
        //for select2 adding parameter
        jQuery('.select2Ajax').on('select2:opening', function () {
            var objParams = {
                CompanyID: @CurrentUser.Details.CompanyID,
            };
            $(this).attr("select2Ajax-parameter", JSON.stringify(objParams));
        });

        $('.editUser').on('click', function () {
            let UserID = $(this).attr('UserID');
             getUserInfo(UserID)
        });

    });
    function getUserInfo(UserID)
    {
            $.ajax({
                url: '@Url.Action("GetUserInfo", "User")',
                type: "GET",
                cache: false,
                dataType: "JSON",
                beforeSend: function () {
                    $('#loadingScreen').show();
                },
               /* async: false,*/
                data: { "UserID": UserID },
                success: function (response) {


                    $('#FirstName').val(response.Fname)
                    $('#LastName').val(response.Lname)
                    $('#MiddleName').val(response.Mname)
                    $('#Email').val(response.Email)
                    var selectedUserType = $("<option selected='selected'></option>").val(response.UserTypeID).text(response.UserType)
                    var selectedBranch = $("<option selected='selected'></option>").val(response.BranchID).text(response.Branch)
                    $("#SelectedUserTypeID").append(selectedUserType).trigger('change');
                    $("#SelectedCompanyBranchID").append(selectedBranch).trigger('change');


                },
                error: function (xhr, status, error) {
                    toastr.error('An error has occured while processing, Please contact Databridge Support.');
                },
                complete: function () {
                    $('#loadingScreen').hide();
                },
            });


    };
</script>


