@using ECOCSystem.Model
@model MakeModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes = false;
}
<style>
    .address-setting {
        font-size: 15px;
    }

    .add-button {
        border-radius: 50%;
        width: 50px;
        height: 50px;
        font-size: 30px;
        display: flex;
        align-content: center;
        justify-content: center;
        align-items: center;
    }

    .addnew-button {
        display: flex;
        align-items: flex-end;
    }


    .cptl-title-header {
        display: flex;
        align-items: center;
    }

        .cptl-title-header label {
            margin: 0;
        }

        .cptl-title-header .tooltip {
            white-space: nowrap;
        }
    /*addnew button*/
    .uiverse {
        position: relative;
        background: #ffffff;
        color: #000;
        /* padding: 15px; */
        margin: 10px;
        /* border-radius: 10px; */
        width: 32px;
        height: 33px;
        font-size: 17px;
        display: flex;
        justify-content: center;
        align-items: center;
        /* flex-direction: column; */
        box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        border-radius: 50%;
        transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        background-color: darkgreen;
        color: white;
        font-size: 17px;
        font-weight: lighter;
    }



    .tooltip {
        position: absolute;
        top: 0;
        font-size: 14px;
        background: #ffffff;
        color: #ffffff;
        padding: 5px 8px;
        border-radius: 5px;
        box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
        opacity: 0;
        pointer-events: none;
        transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

        .tooltip::before {
            position: absolute;
            content: "";
            height: 8px;
            width: 8px;
            background: #ffffff;
            bottom: -3px;
            left: 50%;
            transform: translate(-50%) rotate(45deg);
            transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        }

    .uiverse:hover .tooltip {
        top: -45px;
        opacity: 1;
        visibility: visible;
        pointer-events: auto;
    }

    svg:hover span,
    svg:hover .tooltip {
        text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.1);
    }

    .uiverse:hover,
    .uiverse:hover .tooltip,
    .uiverse:hover .tooltip::before {
        /* background: linear-gradient(320deg, rgb(3, 77, 146), rgb(0, 60, 255));*/
        color: #ffffff;
        background-color: darkgreen;
    }
    /*addnew button*/



    .toggle-group {
        font-family: 'Source Sans Pro';
        color: #117a8b;
    }


    .btn-edit-1 {
        /*    margin-top: 25px;*/
        background-color: white;
        color: darkgreen;
        border-radius: 10px;
        box-shadow: 0px 0px 0px 0px gray !important;
    }


        .btn-edit-1 span i {
            font-size: 23px;
        }


    #select-client .form-group {
        margin: 0;
    }

    .card {
        margin-bottom: 0;
        box-shadow: 0 0 3px rgba(0,0,0,.125), 0 1px 5px rgba(0,0,0,.2);
    }

    .icheck-success > input:first-child:checked + input[type=hidden] + label::before, .icheck-success > input:first-child:checked + label::before {
        background-color: darkgreen;
        border-color: darkgreen;
    }

    .row {
        margin: 0;
    }

    .infoButtons {
        display: flex;
        justify-content: space-around;
    }
</style>
<style>
    .modal {
        overflow: auto !important;
    }

    .card .overlay, .info-box .overlay, .overlay-wrapper .overlay, .small-box .overlay {
        background-color: rgb(52 58 64 / 59%);
    }
</style>
<section class="content">
    <div class="card card-success card-outline">
        <div class="card-header">
            <h3 class="card-title">Vehicle Make List</h3>
        </div>
        <div class="fab" id="addMake" type="button" data-toggle="modal" data-target="#modal-make-info" name="btnSubmit" title="" @*onclick="location.href='/Customer/Customer'"*@ data-original-title="Create New"> + </div>
        <div class="card-body">
            @using (Html.BeginForm("Vehicle", "Vehicle", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "Make_Form" }))
            {

                @Html.HiddenFor(m => m.MakeID)
                <div id="" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="table-makeList" class="table table-head-fixed table-hover dataTable dtr-inline table-hover dt-responsive nowrap " style="min-width: 80em;cursor:pointer">
                                <thead>
                                    <tr>
                                        <th><center>Action Edit</center></th>
                                        <th>Vehicle Make</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="modal-make-info" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-xl">
                        @{
                            Html.RenderPartial("_MakeInfo", Model.MakeInfo, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "MakeInfo" } });
                        }
                    </div>

                </div>


                <div class="modal fade" id="modal-model-info" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-xl">
                        @{
                            Html.RenderPartial("_Model", Model.ModelInfo, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "ModelInfo" } });
                        }
                    </div>

                </div>
                <div class="modal fade" id="modal-make-color" style="display: none;" aria-hidden="true">
                    <div class="modal-dialog modal-lg">

                    </div>

                </div>
            }

        </div>
    </div>





</section>
<script>
    $(document).ready(function () {



        getMakeList();
        getModelList()

        $('#addVariant').on('click', function () {
            $("#model-overlay").removeClass("d-none");
            $("#make-overlay").removeClass("d-none");
        });


        $('#addModel').on('click', function () {
            $("#make-overlay").removeClass("d-none");
            clearModelForm()
        });


        $('#modal-model-variant').on('hide.bs.modal', function () {
            $("#make-overlay").removeClass("d-none");
            $("#model-overlay").addClass("d-none");

        });

        $('#modal-model-info').on('hide.bs.modal', function () {
            $("#make-overlay").addClass("d-none");
            console.log('modal info close')
        });



        $('#addMake').on('click', function () {
            $('#MakeOptions').empty();
            $('#MakeOptions').append(`<button type="button" id="submit_addMake" value="ADDMAKE" class="btn btn-success">Save</button> `)

            $('#submit_addMake').on('click', function () {
                submitForm("ADDMAKE");
            });
        });


    });


    var addAntiForgeryToken = function (data) {
        data.__RequestVerificationToken = $("[name='__RequestVerificationToken']").val();
        return data;
    };

    function submitForm(submitType) {
        var form = jQuery("#Make_Form");
        if (form.valid()) {
            var formData = new FormData(form[0]);
            formData.append("submitType", submitType);
            $.ajax({
                url: '@Url.Action("MakeForm", "Vehicle")',
                type: "POST",
                dataType: "JSON",
                contentType: false,
                processData: false,
                async: true,
                data: addAntiForgeryToken(formData),
                beforeSend: function () {
                    toastr.clear();

                },
                success: function (response) {
                    switch (response.Status) {
                        case "Success":

                            if (response.ClientID > 0) {
                                getAddressList(response.ClientID)
                                getVehicleList(response.ClientID)
                            }
                            console.log(response.CurrentSubmit)
                            switch (response.CurrentSubmit) {
                                case "Client":
                                    $("#modal-client").modal('hide');
                                    clearClientForm(response.ClientID)
                                    break;
                                case "Address":
                                    $("#modal-client-address").modal('hide');
                                    clearAddressForm()
                                    break;
                                case "Vehicle":
                                    $("#modal-client-vehicle").modal('hide');
                                    getVehicleList(response.ClientID)
                                    clearVehicleForm();

                                    break;
                                case "CTPL":
                                    showCOCFile(response.FileName);
                                    break;
                                default:
                                    break;
                            }

                            toastr.success(response.Message);
                            break;
                        case "Warning":
                            toastr.warning(response.Message);
                            break;
                        case "Error":
                            toastr.error(response.Message);
                            break;
                        case "Info":
                            toastr.info(response.Message);
                            break;
                        default:
                            toastr.error(response.Message);
                            break;
                    }

                },
                error: function (xhr, status, error) {
                    toastr.error('An error has occured while processing, Please contact Databridge Support.');
                },
                complete: function () {
                  /*  $(".modal").modal('hide');*/
                /*    $('.modal-backdrop').remove();*/
                    $('#loadingScreen').hide();
                },
            });
        }
/*        $(".tab-content").height("auto");*/
    }


    function clearModelForm() {
        $('#ModelInfo_Modelid').val(0)


        $('#ModelInfo_Model').val('')

        var selecteBodyType = $("<option selected='selected'></option>").val(0).text("Select Body Type")
        $("#ModelInfo_SelectedBodyTypeID").append(selecteBodyType).trigger('change');




    }
    function EditMake(MakeID, MakeName) {
        getMakeModelList(MakeID)


        $("#MakeID").val(MakeID)

        $("#MakeInfo_VehicleMake").val(MakeName)

        $("#model-title").text(MakeName)


        $('#MakeOptions').empty();
        $('#MakeOptions').append(`<button type="button" id="submit_updateMake" value="UPDATEMAKE" class="btn btn-success">Update</button>`)
    };

    function EditModel(ModelID, ModelName,BodyTypeID,BodyName) {
        console.log(ModelID, ModelName)

        $('#ModelInfo_Modelid').val(ModelID)
        $('#ModelInfo_Model').val(ModelName)


        var selecteBodyType = $("<option selected='selected'></option>").val(BodyTypeID).text(BodyName == "No Body Type" ? "Select Body Type" : BodyName)
        $("#ModelInfo_SelectedBodyTypeID").append(selecteBodyType).trigger('change');

        $("#make-overlay").removeClass("d-none");
        $('#ModelOptions').empty();
        $('#ModelOptions').append(`<button type="button" id="submit_updateMake" value="UPDATEMAKE" class="btn btn-success">Update</button>`)
    };

    function getMakeList() {

        let cntRow = 0;
        Make_table = $("#table-makeList").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "scrollX": true,
            "scrollY": true,
            "destroy": true,


            "order": [],
            "dom":
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
            "ajax": {
                "url": '@Url.Action("GetMakeList", "Vehicle")',
                "type": "POST",
                "datatype": "json",
/*                "data": { "CompanyID": CompanyID, "BranchID": BranchID },*/
                "beforeSend": function () {
                    $('#loadingScreen').show();
                    cntRow = 0;
                },
                "complete": function (row, data, dataIndex) {


                    $('#loadingScreen').hide();
                }
            },
            "createdRow": function (row, data, dataIndex) {

            },
            "columns": [
                {
                    "className": "VehicleMakeID", "data": null, "name": "VehicleMakeID",
                    render: function (data, type, row) {
                        return `<center>
                                  <div class="">
                                         <span type="button" data-toggle="modal" data-target="#modal-make-info"" onclick="EditMake(`+ data.VehicleMakeID + `,'` + data.VehicleMakeName+`')">
                                            <i class="fa fa-pencil-alt fa-lg text-primary" style="padding: 0px"></i>
                                        </span>
                                    </div>
                                 </div>
                              </center>`
                    }, "autoWidth": true
                },
                { "className": "VehicleMakeName", "data": "VehicleMakeName", "name": "VehicleMakeName", "autoWidth": true },



            ]
        });
        $('#table-makeList_paginate').parent('div').parent('div').css('flex-direction', 'row-reverse').css('margin', '12px');



    };

    function getMakeModelList(MakeID) {

        let cntRow = 0;
         Series_table = $("#tbl_Series").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "scrollX": true,
            "scrollY": true,
             "destroy": true,
             "pageLength": 5,

            "order": [],
            "dom":
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
            "ajax": {
                "url": '@Url.Action("GetMakeModelList", "Vehicle")',
                "type": "POST",
                "datatype": "json",
                "data": { "MakeID": MakeID },
                "beforeSend": function () {
                    $('#loadingScreen').show();
                    cntRow = 0;
                },
                "complete": function (row, data, dataIndex) {

                    $('#loadingScreen').hide();
                }
            },
            "createdRow": function (row, data, dataIndex) {

            },
            "columns": [
                {
                    "className": "VehicleModelID", "data": null, "name": "VehicleModelID",
                    render: function (data, type, row) {
                        return `<center>
                                  <div class="">
                                         <span type="button" data-toggle="modal" data-target="#modal-model-info"" onclick="EditModel(`+ data.VehicleModelID + `,'` + data.VehicleModelName + `',` + data.BodyTypeID + `,'` + data.BodyTypeName + `')">
                                            <i class="fa fa-pencil-alt fa-lg text-primary" style="padding: 0px"></i>
                                        </span>
                                    </div>
                                 </div>
                              </center>`
                    }, "autoWidth": true
                },
                {
                    "className": "VehicleModelID", "data": null, "name": "VehicleModelID",
                    render: function (data, type, row) {
                        return `<center>
                                  <div class="">
                                         <span type="button" data-toggle="modal" data-target="#modal-model-info"" onclick="EditModel(`+ data.VehicleModelID + `,'` + data.VehicleModelName + `',` + data.BodyTypeID + `,'` + data.BodyTypeName + `')">
                                            <i class="fa fa-minus-circle fa-lg text-danger" style="padding: 0px"></i>
                                        </span>
                                    </div>
                                 </div>
                              </center>`
                    }, "autoWidth": true
                },
                { "className": "VehicleModelName", "data": "VehicleModelName", "name": "VehicleModelName", "autoWidth": true },
                { "className": "BodyTypeName", "data": "BodyTypeName", "name": "BodyTypeName", "autoWidth": true },




            ]
        });
         $('#tbl_Series_paginate').parent('div').parent('div').css('flex-direction', 'row-reverse').css('margin', '12px');



    };

    function getModelList() {
        let cntRow = 0;
         SeriesList_table = $("#tbl_Series_list").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "scrollX": true,
            "scrollY": true,
             "destroy": true,
             "pageLength": 20,

            "order": [],
            "dom":
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
            "ajax": {
                "url": '@Url.Action("GetModelList", "Vehicle")',
                "type": "POST",
                "datatype": "json",
/*                "data": { "MakeID": MakeID },*/
                "beforeSend": function () {
                    $('#loadingScreen').show();
                    cntRow = 0;
                },
                "complete": function (row, data, dataIndex) {

                    $('#loadingScreen').hide();
                }
            },
            "createdRow": function (row, data, dataIndex) {

            },
            "columns": [
                {
                    "className": "ModelID", "data": null, "name": "ModelID",
                    render: function (data, type, row) {
                        return `<center>
                                  <div class="icheck-primary d-inline">
                                    <input class="chk"  name="check" type="checkbox" SeriesID="`+ data.ModelID + `" id="Model` + data.ModelID +`">
                                        <label for="Model`+ data.ModelID+`">
                                    </label>
                                 </div>
                              </center>`
                    }, "autoWidth": true
                },
                { "className": "ModelName", "data": "ModelName", "name": "ModelName", "autoWidth": true },



            ]
        });
        $('#tbl_Series_list_paginate').parent('div').parent('div').css('flex-direction', 'row-reverse').css('margin', '12px');




    };

</script>


